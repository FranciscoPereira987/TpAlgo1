abrir_archivos,    """
    AUTOR: Ivan Coronel
    AYUDA:
            PRE: Recibe una lista con nombres de archivos csv 
            POST: Los abre y devuelve una lista con sus manejadores de archivo
agregar_separador,    """
    [Autor: Francisco Pereira]
    [Ayuda:
    Pre--> Ingresa un texto cualquiera
    Post --> Busca el primer cambio de linea
    y le agrega al texto una linea de esa longitud 
    con _]
    """
analizar_codigo,    """
    [Autor: Francisco Pereira]
    [Ayuda:
    Pre --> Ingresa el codigo de una funcion junto con su nombre
    Post --> Actualiza la cantidad de llamadas que hace esa funcion a otras
    funciones]
    """
devolver_parametros,    """
    [Autor: Francisco Pereira]
   [Ayuda:
    Pre --> Ingresa una linea de codigo donde se define una funcion
    Post --> Devuelve los parametros formales separados por /]
    """
fin_funcion,    """
    [Autor: Francisco Pereira]
    [Ayuda: Devuelve verdadero si se llego al final de una funcion]
    """
generar_puntajes,    """
    [Autor: Francisco Pereira]
    [Ayuda:
    Pre --> Ingresan el archivo, la lista con los nombres de las funciones
    y el diccionario ya armado
    Post --> Devuelve los puntajes de cada una de las funciones segun la 
    tabla del enunciado del tp]
    """
generar_texto_encolumnado,    """
    [Autor: Francisco Pereira]
    [Ayuda:
    Pre --> Ingresa el ancho de la columna y el texto
    Post --> Devuelve una fila de texto y el resto del texto
    si es que no entra completamente en la columna
    ]
    """
identificar_alfabeticamente,    """
    [Autor: Francisco Pereira]
    [Ayudo: Pre --> Ingresan los nombres de funciones (el actual, el maximo y el minimo)
           Post --> Devuelve True si hay cambios False en caso contrario]
    """
identificar_comentarios,    """[Autor: Claudio Gimenez]
       [Ayuda: Identifica si hay comentarios en la linea que recibe,  
        como parametro, tambien recibe comentado_multi en False que 
        si es multilinea lo devuelvo en True, devuelve comentarios,
        lineay forma de comentar en multilinea si es "" o '']
    """,#pregunto si hay comentario con #,# pregunto si es un comentario con triple dobles comillas en una linea,# pregunto si es un comentario con triple comillas simples en una linea,# pregunto si empieza un comentario multilinea con triple comillas dobles,#Cambio el valor de comentado multi,# pregunto si empieza un comentario multilinea con triple comillas simple,#Cambio el valor de comentado multi
identificar_funciones,    """
    [Autor: Francisco Pereira]
    [Ayuda: Pre --> Ingresa una linea de texto
           Post --> Devuelve True si en esa linea se define una funcion
           False en caso contrario]
    """
lector_rutas,    """
    [Autor: Francisco Pereira]
    [Ayuda: Pre --> Ingresa el archivo que contiene las rutas y una opcional
                    ruta_py que si es True genera tambien el nombre del modulo
            Post --> Devuelve un archivo abierto y un nombre de modulo 
            el nombre de modulo esta vacio si ruta_py se pasa como False]
    """
leer_funcion,    """[Autor: Claudio Gimenez]
       [Ayuda: Recibe un archivo y devuelve una lista de lineas de codigo
        y una lista de comentarios]
    """,#luego lo uso para validar si es una multilinea,#si es una multinea la linea pasa a ser comentario,# agrego linea a comentario,# agrego la ultima '''  """,# comentado multi pasa a False,# agrego a lista la linea de codigo,#print(linea, end = ""),# agrego a la lista el comentario,#print(comentarios) ,# leo otra linea
leer_linea,    """[Autor: Claudio Gimenez]
       [Ayuda: Lee una linea del archivo que recibe como parametro,  
        devuele linea, comentarios o si es un comentario multlinea
        y forma de coementar si es multilinea]
    """
leer_linea_archivo,    """
    [Autor: Francisco Pereira]
    [Ayuda: como mezcla.leer_archivos se usa mucho de una forma especial aca
    decidi armar una funcion que lo haga, para que solamente aparezca una vez
    la forma rara de llamar a esa funcion en todo el codigo]
    """
lista_a_string,
main,
main_ordenamiento,    """
    [Autor: Francisco Pereira]
    [Ayuda: Ordena los archivos de python en archivos csv, uno para codigo, otro para comentarios
    devuelve las rutas a los archivos que tienen las rutas a todos los archivos ordenados] 
    """
main_prueba,
main_sep,#print(leer_archivo(ruta))
manejar_archivos,    """
    [AUTOR: Francisco Pereira]
    [AYUDA:
    Pre --> Ingresa el archivo con las rutas
    durante --> lee la cantidad de lineas en las rutas
    Post --> Devuelve dos archivos txt con las rutas de los archivos a ordenar]
    """
nombre_funcion,    """
    [Autor: Francisco Pereira]
    [Ayuda: Pre --> Ingresa una linea donde se declara una funcion
           Post --> Devuelve el nombre de la funcion]
    """
nombre_modulo,    """
    [Autor: Francisco]
    [Ayuda:
    Pre --> Ingresa una linea donde se encuentra la ruta a un archivo de python
    Post --> Devuelve el nombre del archivo de python]
    """
ordenar_funciones,    """
    [Autor: Francisco Pereira]
    [Ayuda: Pre --> Ingresa el archivo a ordenar y los archivos en los que se van a ordenar
           Post --> Salen ordenadas las funciones por orden alfabetico en el archivo de salida]
    """,#Escribo la funcion minima en los dos archivos
procesar_entrada,    """
    [Autor: Francisco]
    [Ayuda: Pre --> Ingresan los archivos de python, donde va el codigo y donde van los comentarios
           Durante --> Ordena el archivo de codigo y lo reparte en los otros dos
           Post --> Cierra los archivos de codigo y comentarios]
    """,#Mod_false esta para guardar un string vacio que no sirve
recorrer_archivo,    """
    [Autor: Francisco Pereira] 
    [Ayuda: Pre ---> Ingresa el archivo de entrada
           Post ---> Devuelve el nombre maximo y el texto de esa funcion]       
    """
revisar_llamadas,    """
    [Autor: Francisco Pereira]
    [Ayuda:
    Pre --> Ingresa el diccionario con el nombre de las funciones, el nombre de funcion actual
    y una linea de codigo de esta funcion
    Post --> Actualiza el valor de llamadas que hace la funcion en la linea
    de codigo que se pasa como parametro]
    """
